from tkinter import*
from tkinter import ttk
import sqlite3

c=sqlite3.connect("student.db")
curses=c.cursor()
curses.execute("CREATE TABLE IF NOT EXISTS STUDENT(NAME VARCHAR(20),REGISTERNUMBER INTEGER,STUDENTAGE INTEGER,STUDENTDOB VARCHAR(20))")
c.commit()
c.close()
print("table created")
class student:
    def __init__(self,root):
      self.root=root
      self.T_Frame=Frame(self.root,height=60,width=1200,background="white",bd=2)
      self.T_Frame.pack()
      self.title=Label(self.T_Frame,text="staff management system",font="arial 20 bold",width=1600,bg="violet")
      self.title.pack()
      leftframe=Frame(root,height=600,width=400,bg="pink")
      leftframe.place(relx=0.001,rely=0.001)
      rightframe=Frame(root,height=560,width=800,bg="sky blue")
      rightframe.place(relx=0.33,rely=0.07)
      subtitle=Label(leftframe,text="student details",bg="sky blue",font="arial 25 bold")
      subtitle.place(relx=0.10,rely=0.1)
      alabel=Label(root,text="(i) enter the student name",bg="pink",fg="black",font="arial 12 bold").place(relx=0.001,rely=0.2)
      self.aentry=Entry(root,font="arial 12 bold")
      self.aentry.place(relx=0.17,rely=0.2)
      blabel=Label(root,text="(ii)enter register number",bg="pink",fg="black",font="arial 12 bold").place(relx=0.001,rely=0.3)
      self.bentry=Entry(root,font="arial 12 bold")
      self.bentry.place(relx=0.16,rely=0.3)
      clabel=Label(root,text="(iii)enter the student age",bg="pink",fg="black",font="arial 12 bold").place(relx=0.001,rely=0.4)
      self.centry=Entry(root,font="arial 12 bold")
      self.centry.place(relx=0.17,rely=0.4)
      dlabel=Label(root,text="(iv)enter the student DOB",bg="pink",fg="black",font="arial 12 bold").place(relx=0.001,rely=0.5)
      self.dentry=Entry(root,font="arial 12 bold")
      self.dentry.place(relx=0.17,rely=0.5)
      b1=Button(leftframe,text="ADD",font="arial 10 bold",command=self.ADD)
      b1.place(relx=0.01,rely=0.6)
      b2=Button(leftframe,text="DELETE",font="arial 10 bold",command=self.DELETE)
      b2.place(relx=0.15,rely=0.6)
      b3=Button(leftframe,text="UPDATE",font="arial 10 bold",command=self.UPDATE)
      b3.place(relx=0.35,rely=0.6)
      b4=Button(leftframe,text="REFRESH",font="arial 10 bold",command=self.REFRESH)
      b4.place(relx=0.57,rely=0.6)
      self.tree=ttk.Treeview(rightframe,columns=("c1","c2","c3","c4"),show="headings",height=25)
      self.tree.place(relx=0.001,rely=0.01)
      self.tree.column('#1',anchor=CENTER,width=200)
      self.tree.heading('#1',text="NAME")
      self.tree.column('#2',anchor=CENTER,width=200)
      self.tree.heading('#2',text="REGISTERNUMBER")
      self.tree.column('#3',anchor=CENTER,width=200)
      self.tree.heading('#3',text="STUDENTAGE")
      self.tree.column('#4',anchor=CENTER,width=200)
      self.tree.heading('#4',text="STUDENTDOB")

      self.tree.insert("",index=0,values=("naveen",5258741,20,"08.11.2004"))
      self.tree.insert("",index=0,values=("velan",22896325,19,"31.01.2005"))
      
    def ADD(self):
        NAME=self.aentry.get()
        REGISTERNUMBER=self.bentry.get()
        STUDENTAGE=self.centry.get()
        STUDENTDOB=self.dentry.get()
        self.tree.insert("",index=0,values=(NAME,REGISTERNUMBER,STUDENTAGE,STUDENTDOB))
        c=sqlite3.connect("student.db")
        curses=c.cursor()
        curses.execute("INSERT INTO STUDENT(NAME,REGISTERNUMBER,STUDENTAGE,STUDENTDOB) VALUES(? ? ? ?)",(NAME,REGISTERNUMBER,STUDENTAGE,STUDENTDOB))
        c.commit()
        c.close()
        print("VALUE INSERTED")
    def DELETE(self):
       item=self.tree.selection()[0]
       selected_item = self.tree.item(item)['values'][0]
       self.tree.delete(item)
       c=sqlite3.connect("student.db")
       cursor = c.cursor()
       c.commit()
       c.close()
       self.tree.delete(item)
    def UPDATE(self):
        NAME=self.aentry.get()
        REGISTERNUMBER=self.bentry.get()
        STUDENTAGE=self.centry.get()
        STUDENTDOB=self.dentry.get()
        item=self.tree.selection()
        self.tree.item(item,values=(NAME,REGISTERNUMBER,STUDENTAGE,STUDENTDOB))
    def REFRESH(self):
        NAME=self.aentry.delete(0,END)
        REGISTERNUMBER=self.bentry.delete(0,END)
        STUDENTAGE=self.centry.delete(0,END)
        STUDENTDOB=self.dentry.delete(0,END)
        item=self.tree.delete()
        self.tree.item(item,values=(NAME,REGISTERNUMBER,STUDENTAGE,STUDENTDOB))
          
      #self.Frame_1=Frame(self.root ,heigth=550, width=200, bd=2, relief=GROOVE,bg="yellow")
      #self.Frame_1.pack()
root=Tk()
root.title("student data base")
root.resizable(False,False)
root.geometry("1200x600")
student(root)
root.mainloop()